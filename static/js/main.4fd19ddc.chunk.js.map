{"version":3,"sources":["App.js","index.js"],"names":["marked","require","placeholder","renderer","Renderer","link","href","title","text","concat","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleChange","bind","assertThisInitialized","event","ph","target","value","setState","preview","setOptions","breaks","react_default","a","createElement","id","App_Editor","onChange","App_Previewer","innerhtml","React","Component","Editor","Previewer","dangerouslySetInnerHTML","__html","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"gOAEMA,SAASC,EAAQ,KAEjBC,EAAW,+qCA+CXC,EAAW,IAAIH,EAAOI,SAC5BD,EAASE,KAAO,SAAUC,EAAMC,EAAOC,GACrC,MAAO,4BAAAC,OAA4BH,EAA5B,MAAAG,OAAqCD,GAAS,YAEjDE,cACL,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACAQ,MAAM,CACTjB,eAEHU,EAAKQ,aAAeR,EAAKQ,aAAaC,KAAlBR,OAAAS,EAAA,EAAAT,CAAAD,IALJA,4EAOJW,GACX,IAAMC,EAAKD,EAAME,OAAOC,MACxBX,KAAKY,SAAS,CACZzB,YAAasB,qCAMf,IAAII,EAAS,GAQb,OAPI5B,IACFA,EAAO6B,WAAW,CAChBC,QAAQ,IAETF,EAAU5B,EAAOe,KAAKI,MAAMjB,YAAY,CAACC,SAAUA,KAIpD4B,EAAAC,EAAAC,cAAA,OAAKC,GAAG,kBACNH,EAAAC,EAAAC,cAACE,EAAD,CAAQjC,YAAaa,KAAKI,MAAMjB,YAAakC,SAAUrB,KAAKK,eAC5DW,EAAAC,EAAAC,cAACI,EAAD,CAAWC,UAAWV,YA5BZW,IAAMC,WAmClBC,EAAS,SAAC9B,GACd,OACEoB,EAAAC,EAAAC,cAAA,OAAKC,GAAG,oBACNH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,YAAUC,GAAG,SAASR,MAAOf,EAAMT,YAAakC,SAAUzB,EAAMyB,aAKhEM,EAAY,SAAC/B,GACjB,IAAMiB,EAAUjB,EAAM2B,UACtB,OACEP,EAAAC,EAAAC,cAAA,OAAKC,GAAG,qBACNH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UAAUS,wBAAyB,CAACC,OAAQhB,OAK3ClB,ICvGfmC,IAASC,OAAOf,EAAAC,EAAAC,cAACc,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4fd19ddc.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css'\nconst marked = require('marked')\n\nconst placeholder = `\n# Welcome to my React Markdown Previewer !\n## This is a sub-heading...\n### And here's some other cool stuff:\n  \nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n  \nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | ------------- \nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want! \n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`\n\nconst renderer = new marked.Renderer();\nrenderer.link = function (href, title, text) {\n  return `<a target=\"_blank\" href=\"${href}\">${text}` + '</a>';\n}\nclass App extends React.Component{\n constructor(props){\n   super(props)\n    this.state={\n      placeholder\n    }\n   this.handleChange = this.handleChange.bind(this)\n }\n  handleChange(event){\n    const ph = event.target.value\n    this.setState({\n      placeholder: ph\n    })\n  }\n\n  render(){\n  \n    let preview =''\n    if (marked){\n      marked.setOptions({\n        breaks: true,\n      });\n       preview = marked(this.state.placeholder,{renderer: renderer})\n    }\n    \n    return (\n      <div id=\"main-container\">\n        <Editor placeholder={this.state.placeholder} onChange={this.handleChange}/>\n        <Previewer innerhtml={preview} />\n      </div>\n    );\n  }\n  \n}\n\nconst Editor = (props) =>{\n  return(\n    <div id=\"editor_container\">\n      <h3>Markdown Editor</h3>\n      <textarea id=\"editor\" value={props.placeholder} onChange={props.onChange}></textarea>\n    </div>\n  )\n}\n\nconst Previewer = (props) =>{\n  const preview = props.innerhtml\n  return (\n    <div id=\"preview_container\">\n      <h3>Markdown preview</h3>\n      <div id=\"preview\" dangerouslySetInnerHTML={{__html: preview}}></div>\n     </div>\n  )\n  \n}\nexport default App\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}